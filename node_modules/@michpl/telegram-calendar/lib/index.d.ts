interface IBaseOptions {
    weekDayNames?: string[];
    monthNames?: string[];
    averageYears?: number;
    callbackDataType?: string;
    ignoreButtonValue?: string | number;
    startFromSunday?: boolean;
}
export interface IOptions extends IBaseOptions {
    minDate?: string | number | Date;
    maxDate?: string | number | Date;
}
export interface ICallbackButton {
    text: string;
    callback_data: string;
}
export declare class Calendar {
    private options;
    private static WeekLength;
    constructor({ minDate, maxDate, ...options }?: IOptions);
    private isDate;
    private sanitizeMinMaxDate;
    private isValidMinMaxDate;
    protected createCallbackButton(name: string, value?: string | number, action?: string): ICallbackButton;
    private addHeader;
    private isDayAvailable;
    private addDays;
    private leadingZero;
    private formatAnswer;
    private addDay;
    private getStartOfMonth;
    private getEndOfMonth;
    private isValidDate;
    getPage(inputDate: number | string | Date): ICallbackButton[][];
    getYears(inputDate: number | string | Date): ICallbackButton[][];
    private getMaxYear;
    private getMinYear;
    private isInMinMonth;
    private isInMaxMonth;
    private isSameMonth;
}
export {};
